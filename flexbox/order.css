* {
    margin: 0;
    padding: 0;
    box-sizing: border-box;
}

body {
    background: #f2f2f2;
}

.contenedor {
    width: 90%;
    /* mide siempre el 90% de tu contenedor padre (en este caso body) si el body mide mas de 1000px quedate en 1000px. Si mide 700px quedate al 90% de esos 700px */
    max-width: 1000px;
    margin: 40px auto;
    border: 5px solid black;
    /* AUTO en margin: margen izquierdo y derecho se calculan automáticamente para que el elemento quede centrado horizontalmente dentro de su contenedor.
    Esto solo funciona cuando el elemento es de bloque y tiene un ancho fijo o limitado (width o max-width).
    Vamos, que el auto es como decir: “haz tú las cuentas para dejarlo igual de separado a izquierda y derecha”. */
    padding: 40px;
    display: flex;
    gap: 40px;
}

.caja {
    background: blue;
    color: white;
    padding: 40px;
    font-size: 24px;
    border-radius: 5px;
}





.order {
    .uno {
        order: 4;
    }

    .dos {    
        order: 3;
    }

    .tres {
        order: 2;
    }

    .cuatro {
        order: 1;
    }

    .cinco {   /*💡💡💡💡Leer linea 58 para saber porque "no esta en la posicion 3💡💡💡*/
        order: 3;
    }
}
/*            💡💡💡 Cuando dos elementos tienen el mismo valor de order, el que aparece antes en el HTML se muestra primero💡💡💡
                              El navegador respeta el orden del HTML si el order es igual.
                              Valores más bajos se muestran primero.
                              Cuando hay empate en order, se respeta el orden del HTML.*/
