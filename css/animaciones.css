@charset "UTF-8";
.caja {
  width: 200px;
  height: 200px;
  margin: 20px;
  padding: 20px;
  font-size: 28px;
  border-radius: 5px;
  background: #43ae75;
  animation-name: cambiarAncho; /*aqui solo ESPECIFICAMOS que queremos trabajar con el KETFRAMES que hemos creado cambiarAncho*/
  animation-duration: 3s; /* Quiero que la animacion dure 3seg */
  animation-delay: 0; /* fins q no pasin 5seg no escomen√ßara */
  animation-timing-function: ease; /* EASE -> empieza lento, acelera, y termina lento */
  /* animation-iteration-count: infinite;  cu√°ntas veces quieres que se repite la animaci√≥n. */
  /* animation-direction: alternate; */
  /*   animation-direction: Suele ser util cuando el iteration-count: INFINITE 
              reverse: se reproduce al reves
              alternate: la animaci√≥n se reproduzca ida y vuelta
              alternate-reverse:  la animaci√≥n se reproduzca en sentido alterno, pero empezando al rev√©s.    */
  animation-fill-mode: forwards; /*  permite que el elemento mantenga los estilos de la animaci√≥n en ciertos momentos (antes, despu√©s o ambos)

forwards	Mantiene los estilos del √∫ltimo KEYFRAMES (to) despu√©s de la animaci√≥n.
backwards	Aplica los estilos del primer KEYFRAMES (from) y los mantendra durante el periodo de delay (animation-delay).
both        Combina forwards y backwards: mantiene estilos antes y despu√©s.  */
}
.caja:hover {
  animation: agitar 0.3s ease-in 0s infinite forwards;
}

/*  @keyframes es una regla de CSS que se usa para crear animaciones. (solo se trabajan con FROM y TO, pero con los % se trabaja del 0 al 100)
      Define c√≥mo deben cambiar los estilos de un elemento en diferentes momentos del tiempo.*/
@keyframes cambiarAncho { /* @keyframes NOMBRE-DE-LA-ANIMACION,   Aqui estamos DEFINIENDO la animacion */
  from { /* From -> inicio de la animaci√≥n */
    width: 200px;
    /* background: black; */
  }
  to { /* To-> Fin de la animaci√≥n */
    width: 400px;
    /* background: blue; */
  }
}
@keyframes agitar {
  0% {
    transform: translateY(0px); /*Al iniciar la animaci√≥n (fotograma 0%), el elemento est√° en su posici√≥n original, sin desplazamiento vertical.*/
    /*transform: translateY(0px) significa ‚Äúno moverme hacia arriba ni hacia abajo‚Äù.*/
  }
  100% {
    transform: translateY(5px);
    /*Al finalizar la animaci√≥n (fotograma 100%), el elemento se ha desplazado 5 p√≠xeles hacia abajo respecto a su posici√≥n original.*/
  }
}
/*                        ¬øQu√© hace en total    (porqu?
     üëâ El elemento se mueve de su posici√≥n normal hacia abajo 5 p√≠xeles.
   Si la animaci√≥n se repite (por ejemplo, infinite), parece que tiembla o se sacude.*//*# sourceMappingURL=animaciones.css.map */